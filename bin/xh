#!/usr/bin/perl -s
use warnings;
use strict;
use feature ':5.10';

our($bal, $bionic, $trip);
my $max = 9;

my $cmd = shift;
my @cmd = $cmd ? ('-c', $cmd) : ();
my $file = $bionic ? 'security_hosts_bionic' : 'security_hosts';

open my $host_fh, '<', "$ENV{HOME}/$file" or die "Cannot open `$ENV{HOME}/$file`: $!";

my $i = 0;
my(@hosts, $balance, %balance, @trip);
for my $host (<$host_fh>) {
    chomp $host;
    if (!$host || $host =~ /#/) {
        if ($host =~ /# 01_balancer/) {
            $balance = 1;
        }
        elsif ($host =~ /# \d+_\w/) {
            $balance = 0;
        }
        $i = 0 if $host eq '';
        next;
    }

    if ($i == 0) {
        push @hosts, [];
    }

    $balance{$host} = 1 if $bal && $balance;
    push @{$hosts[-1]}, $host;
    push @trip, $host if $trip;
    $i++;
    $i = 0 if $i == $max;
}

for my $group (@hosts) {
    say '# ', join ', ', @$group;
    balance('-d', $group);

    system tm => @cmd, @$group;

    balance('-e', $group);
}

if (@trip) {
    my $trip_hosts = join ",", @trip;
    system qq!ansible-playbook -v --ask-vault-pass -i $ENV{ANSIBLE_HOME}/inventory $ENV{ANSIBLE_HOME}/site.yml --limit $trip_hosts -t rebuild_tripwire_db!;
}

sub balance {
    my($action, $hosts) = @_;
    my $balanced = 0;
    for my $host (@$hosts) {
        if ($balance{$host}) {
            $balanced = 1;
        }
    }

    if ($balanced) {
        my $action_str = $action eq '-e' ? 'enable' : 'disable';
        say "[ENTER] to $action_str balancer and proceed ";
        <>;
    }
    elsif ($action eq '-d') {
        say "[ENTER] to proceed ";
        <>;
    }

    for my $host (@$hosts) {
        if ($balance{$host}) {
            (my $short = $host) =~ s/\.\w+$//;
            system '/opt/bin/balancer.sh', $action, $short;
        }
    }

    say '';
}
