#!/usr/bin/perl
use warnings;
use strict;
use feature ':5.14';

use Getopt::Long;
my %opts;
Getopt::Long::Configure('bundling');
GetOptions(
    'd|dbh'         => \$opts{dbh},
    'o|org=i'       => \$opts{org},
    'M|module=s'    => \@{$opts{modules}},
    'v|verbose+'    => \$opts{verbose},
);

use Data::Dumper; $Data::Dumper::Sortkeys=1;
$ENV{PERL5LIB} //= '';

my @args = ('sudo', "PERL5LIB=/usr/lib/shiftboard:$ENV{PERL5LIB}", $^X);
for my $m (@{$opts{modules}}) {
    push @args, "-M$m";
}

my $log_level = $opts{verbose} ? ($opts{verbose} > 1 ? 'trace' : 'debug') : 'info';

push @args, '-MData::Dumper', '-E', '$Data::Dumper::Sortkeys=1; $cm::BATCH_ERROR = 1;',
    '-E', qq!BEGIN { \$ENV{SHIFTBOARD_LOG_LEVEL}="$log_level" }; use SB; use SB2::Logger;!;
if ($opts{org}) {
    push @args, '-E', "\$cm::SS = $opts{org}; &cm::conf_shiftboard(\$cm::SS);";
}
if ($opts{dbh}) {
    push @args, '-E', "\$dbh = cm::connect_db();";
}

my $input;
for my $arg (@ARGV) {
    if ($arg eq '-') {
        $input = 1;
    }
    elsif ($input && $input == 1) {
        push @args, '-E', "do q{$arg}; die \$@ if \$@;";
        $input = 2;
    }
    elsif ($input && $input == 2) {
        push @args, $arg;
    }
    else {
        push @args, '-E', $arg;
    }
}

say STDERR '# ', join ' ', map {
    (my $foo = $_) =~ s/'/'\\''/g;
    $foo =~ /[#; \t\n'"]/ ? "'$foo'" : $foo
} @args;
system(@args);

