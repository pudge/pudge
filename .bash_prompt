function set_ps1 {
    . $HOME/.git-prompt.sh
    export GIT_PS1_SHOWSTASHSTATE=1
    export GIT_PS1_SHOWDIRTYSTATE=1
    export GIT_PS1_SHOWUNTRACKEDFILES=1
    export GIT_PS1_SHOWUPSTREAM='auto'

    local ptime puser phost phist ppwd pgit pchar
    local black red green yellow blue magenta cyan white end
    black='\[\e[30m\]'
    red='\[\e[31m\]'
    green='\[\e[32m\]'
    yellow='\[\e[33m\]'
    blue='\[\e[34m\]'
    magenta='\[\e[35m\]'
    cyan='\[\e[36m\]'
    white='\[\e[37m\]'
    end='\[\e[0m\]'

    ptime="${green}\t${end}"
    puser='\u'
    phost=$(hostname -f | cut -d . -f 1,2)
    phist="${cyan}\!${end}"
    ppwd="${magenta}\w${end}"
    pgit="${red}"'$(__git_ps1 " (%s)")'"${end}"
    #pchar="${blue}â†’${end}"
    pchar="${blue}\$${end}"

    export PS1="$ptime|$phist $puser@$phost:$ppwd$pgit $yellow\$(get_err)$end\$ "
    export DEMO_PS1="$puser@$phost:$ppwd$pgit \$ "


#    PS1=$(printf "%*s\r%s\n\$ " "$(tput cols)" 'right' 'left')

###    export PS1=$(printf "%${COLUMNS}s\r%s \$ " "$puser@$phost:$ppwd$pgit" "[$ptime] $phist$pchar")
#    export PS1="$puser@$phost:$ppwd$pgit\n[$ptime] $phist$pchar "
#    export PS1="$puser@$phost:$ppwd \$ " # demo
}

function get_err {
    local err=$?
    # 130 == SIGINT
    if [[ $err != 0 && $err != 130 ]]; then
        echo -n "$err "
    fi
}

function set_prompt {
    # for window title
    PROMPT_COMMAND='echo -ne "\033];${USER}@${HOSTNAME%.*.*}:${PWD/#$HOME/~}: \007"'
#    PROMPT_COMMAND="MYCODE=\$?; MYLASTHIST=\$(HISTTIMEFORMAT= history 1 | perl -pe 's/^[ \d]+//'); if [[ ! \${MYLASTHIST} =~ ' \#\d+$' ]]; then history -s \"\${MYLASTHIST} #\$MYCODE\"; fi; history -a; $PROMPT_COMMAND";
    export PROMPT_COMMAND
}

#alias winname="export PROMPT_COMMAND='echo -ne "\""\033]0;"'${WINNAME}'"\007"\""'"

function unset_prompt {
    unset PROMPT_COMMAND
    if [[ ! -z "$1" ]]; then
        printf "\e]1;$1\a"
    fi
}

set_prompt
set_ps1
