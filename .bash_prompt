function set_ps1 {
    if [ -r "$HOME/.bash-git-prompt/gitprompt.sh" ]; then
        MYGITPROMPT=bash-git-prompt
        # Set config variables first
        GIT_PROMPT_ONLY_IN_REPO=1
        GIT_PROMPT_FETCH_REMOTE_STATUS=0   # uncomment to avoid fetching remote status
        GIT_PROMPT_IGNORE_SUBMODULES=1 # uncomment to avoid searching for changed files in submodules
        # GIT_PROMPT_WITH_VIRTUAL_ENV=0 # uncomment to avoid setting virtual environment infos for node/python/conda environments

        GIT_PROMPT_SHOW_UPSTREAM=0 # uncomment to show upstream tracking branch
        GIT_PROMPT_SHOW_UNTRACKED_FILES=all # can be no, normal or all; determines counting of untracked files
        GIT_PROMPT_SHOW_CHANGED_FILES_COUNT=1 # uncomment to avoid printing the number of changed files

        # as last entry source the gitprompt script
        # GIT_PROMPT_THEME=Custom # use custom theme specified in file GIT_PROMPT_THEME_FILE (default ~/.git-prompt-colors.sh)
        GIT_PROMPT_THEME_FILE=~/.git-prompt-colors.sh

        source $HOME/.bash-git-prompt/gitprompt.sh

    elif [ -r "$HOME/.git-prompt.sh" ]; then
        MYGITPROMPT=git-prompt
        GIT_PS1_SHOWSTASHSTATE=1
        GIT_PS1_SHOWDIRTYSTATE=1
        GIT_PS1_SHOWUNTRACKEDFILES=1
        GIT_PS1_SHOWUPSTREAM='auto'
        GIT_PS1_HIDE_IF_PWD_IGNORED=1
        GIT_PS1_SHOWCOLORHINTS=1
        #GIT_PS1_STATESEPARATOR='~'
        GIT_PS1_DESCRIBE_STYLE=branch

        source $HOME/.git-prompt.sh
    fi


    local ptime puser phost phist ppwd pgit pchar
    local black red green yellow blue magenta cyan white end
    black='\[\e[30m\]'
    red='\[\e[31m\]'
    green='\[\e[32m\]'
    yellow='\[\e[33m\]'
    blue='\[\e[34m\]'
    magenta='\[\e[35m\]'
    cyan='\[\e[36m\]'
    white='\[\e[37m\]'
    end='\[\e[0m\]'

    ptime="${cyan}\$(_my_date)${end} "
    puser='\u'
    phost=$(hostname -f | cut -d . -f 1,2)
    if [[ $phost == 'chris-nandor' ]]; then
        phost=williams
    fi
    export PHOST=$phost
    phist="${yellow}\!${end}"
    ppwd="${magenta}\w${end}"
    pchar="${blue}\$${end}"

    hostmarks="$red$(_host_marks)$end"
    precmd="\$(prompt_command)\n\[\$(iterm2_prompt_mark)\]$hostmarks$ptime$puser@$phost:$ppwd\$(_dyn_marks)\n$hostmarks$phist"
    postcmd=" $pchar " #$yellow\$(get_err)$end$pchar "

    GIT_PROMPT_START="$precmd"
    GIT_PROMPT_END="$postcmd"

    if [[ $MYGITPROMPT == 'git-prompt' ]]; then
        __git_ps1 "$GIT_PROMPT_START" "$GIT_PROMPT_END"
    fi

    PS1="\$(save_exit_status)$precmd\$(show_exit_status)$postcmd"
    OLD_GITPROMPT="$PS1"
}

function save_exit_status {
    export MY_LAST_EXIT_STATUS="$?"
    echo -n "${MY_LAST_EXIT_STATUS}" > /tmp/wtfpromptexitstatus
}

function prompt_command {
    history -a;
    wintitle;
}

function wintitle {
    if [[ $ITERM_SESSION_ID && ($PWD =~ "$HOME/src/shiftboard/") ]]; then
        echo -ne "\033]0;${PWD/#$HOME\/src\/shiftboard\//}: \007";
    else
        echo -ne "\033]0;${USER}@${PHOST}:${PWD/#$HOME/~}: \007";
    fi

}

function _my_date {
    date +'%a %Y-%m-%dT%H:%M:%S'
}

function _dyn_marks {
    if [[ -s "$HOME/.sb_track_time" ]]; then
        echo -n ' ⏱ ';
    fi
}

function iterm2_prompt_mark {
    echo -n ''
}

function _host_marks {
    local hostf=$(hostname -f)
    if [[ $hostf =~ \.shiftboard\.com$ ]]; then
        echo -n ' '
        if [[ $hostf =~ \.stg\.shiftboard\.com$ ]]; then
            echo -n '🅢 🅣 🅖'; # $STG
        else
            echo -n '🅟 🅡 🅞 🅓'; # PROD
        fi
        echo -n ' ☢️  '
    fi
}

function show_exit_status {
    local exit_status="$MY_LAST_EXIT_STATUS"

    if [[ -z "$exit_status" && -r /tmp/wtfpromptexitstatus ]]; then
        exit_status=$(cat /tmp/wtfpromptexitstatus)
    fi
    # 130 == SIGINT
    if [[ $exit_status != '' && $exit_status != '0' && $exit_status != '130' ]]; then
        echo -ne " \e[31;1m✘ $exit_status\e[0m"
    else
        echo -ne " \e[32;1m✔\e[0m"
    fi
}

set_ps1
